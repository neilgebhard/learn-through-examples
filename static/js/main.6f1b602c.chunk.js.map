{"version":3,"sources":["UseStateExample.js","App.js","reportWebVitals.js","index.js"],"names":["UseStateExample","href","language","style","docco","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAkCeA,EA9BS,WAoBpB,OACI,gCACA,mBAAGC,KAAK,4CAAR,wBACA,cAAC,IAAD,CAAmBC,SAAS,aAAaC,MAAOC,IAAhD,SAtBa,miBCSNC,MATf,WACE,OACE,eAACC,EAAA,EAAD,WACE,oEACA,cAAC,EAAD,QCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6f1b602c.chunk.js","sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nconst UseStateExample = () => {\n    const codeSnippet = `\n        function App() {\n            // the initial state is passed in as an argument\n            // useState() returns the current state and a function that updates it\n            const [count, setCount] = useState(0);\n\n            const handleClick = () => {\n                setCounter(count + 1);\n            };\n\n            return (\n                <div>\n                    <div>{count}</div>\n                    <button onClick={handleClick}>Increment</button>\n                </div>\n            );\n        };\n    `;\n\n    return (\n        <div>\n        <a href=\"https://reactjs.org/docs/hooks-state.html\">useState()</a>\n        <SyntaxHighlighter language=\"javascript\" style={docco}>\n            {codeSnippet}\n        </SyntaxHighlighter>\n        </div>\n    );\n};\n\nexport default UseStateExample;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport UseStateExample from \"./UseStateExample.js\";\n\nfunction App() {\n  return (\n    <Container>\n      <h3>Learn React Hooks Through Examples</h3>\n      <UseStateExample />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}