{"version":3,"sources":["UseStateExample.js","JSXExample.js","ListExample.js","App.js","reportWebVitals.js","index.js"],"names":["UseStateExample","href","language","style","docco","JSXStateExample","ListExample","App","Container","JSXExample","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAkCeA,EA9BS,WAoBpB,OACI,gCACA,4BAAG,mBAAGC,KAAK,4CAAR,0BACH,cAAC,IAAD,CAAmBC,SAAS,aAAaC,MAAOC,IAAhD,SAtBa,siBC6BNC,EA9BS,WAgBtB,OACE,gCACE,4BACE,mBAAGJ,KAAK,4CAAR,wCAIF,cAAC,IAAD,CAAmBC,SAAS,aAAaC,MAAOC,IAAhD,SAtBa,mVCqCJE,EAvCK,WA2BlB,OACE,gCACE,4BACE,mBAAGL,KAAK,+CAAR,qBAEF,cAAC,IAAD,CAAmBC,SAAS,aAAaC,MAAOC,IAAhD,SA/Ba,2mBCeJG,MAZf,WACE,OACE,eAACC,EAAA,EAAD,WACE,oEACA,6LACA,cAAC,EAAD,IACA,cAACC,EAAD,IACA,cAAC,EAAD,QCFSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.573dc2ed.chunk.js","sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nconst UseStateExample = () => {\n    const codeSnippet = `\n        const App = () => {\n            // the initial state is passed in as an argument\n            // useState() returns the current state and a function that updates it\n            const [count, setCount] = useState(0);\n\n            const handleClick = () => {\n                setCounter(count + 1);\n            };\n\n            return (\n                <div>\n                    <div>{count}</div>\n                    <button onClick={handleClick}>Increment</button>\n                </div>\n            );\n        };\n    `;\n\n    return (\n        <div>\n        <p><a href=\"https://reactjs.org/docs/hooks-state.html\">useState()</a></p>\n        <SyntaxHighlighter language=\"javascript\" style={docco}>\n            {codeSnippet}\n        </SyntaxHighlighter>\n        </div>\n    );\n};\n\nexport default UseStateExample;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nconst JSXStateExample = () => {\n  const codeSnippet = `\n        const App = () => {\n            return (\n            // CSS properties are camel cased\n            <div\n                style={{\n                paddingTop: 20,\n                width: 500\n                }}\n            >\n                <h1 className=\"title\">Title</h1>\n            </div>\n            );\n    `;\n\n  return (\n    <div>\n      <p>\n        <a href=\"https://reactjs.org/docs/hooks-state.html\">\n          JSX: style and className\n        </a>\n      </p>\n      <SyntaxHighlighter language=\"javascript\" style={docco}>\n        {codeSnippet}\n      </SyntaxHighlighter>\n    </div>\n  );\n};\n\nexport default JSXStateExample;\n","import SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nconst ListExample = () => {\n  const codeSnippet = `\n    const App = () => {\n        return (\n          <div>\n            <h3>List of Items</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Description</th>\n                </tr>\n              </thead>\n              <tbody>\n                {list.map((item) => (\n                  <tr key={item.id}>\n                    <td>{item.name}</td>\n                    <td>{item.description}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        );\n      }\n    `;\n\n  return (\n    <div>\n      <p>\n        <a href=\"https://reactjs.org/docs/lists-and-keys.html\">Lists</a>\n      </p>\n      <SyntaxHighlighter language=\"javascript\" style={docco}>\n        {codeSnippet}\n      </SyntaxHighlighter>\n    </div>\n  );\n};\n\nexport default ListExample;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport UseStateExample from \"./UseStateExample.js\";\nimport JSXExample from \"./JSXExample.js\";\nimport ListExample from \"./ListExample.js\";\n\nfunction App() {\n  return (\n    <Container>\n      <h3>Learn React Hooks Through Examples</h3>\n      <p>This resource ise perfect as a refresher for concepts. The examples can be used as boilerplate. They are simple, self-explanatory, and minimalist by design.</p>\n      <UseStateExample />\n      <JSXExample />\n      <ListExample />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}