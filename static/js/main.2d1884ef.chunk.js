(this["webpackJsonplearn-through-examples"]=this["webpackJsonplearn-through-examples"]||[]).push([[0],{277:function(e,t,n){"use strict";n.r(t);var s=n(1),c=n.n(s),r=n(16),i=n.n(r),a=(n(46),n(47),n(48),n(18)),l=n(5),h=n(40),j=n(32),o=n(19),d=n(0),x=function(){return Object(d.jsxs)(d.Fragment,{children:[Object(d.jsx)("h3",{children:"Home"}),Object(d.jsx)("hr",{}),Object(d.jsx)("h3",{children:"What are side effects?"}),Object(d.jsx)("p",{children:'As you read through the React docs, you may have stumbled upon the term "side effect". Its a concept that\'s not specific to React.'}),Object(d.jsx)("p",{children:"A side effect is when a function modifies something outside its scope."}),Object(d.jsx)("p",{children:"If a function isn't deterministic, it has side effects."}),Object(d.jsx)("p",{children:"When a function depends on order of operation, it has side effects."}),Object(d.jsx)("p",{children:"Examples of side effects include modifying a non-local variable, DOM manipulation, I/O streams, and API calls."}),Object(d.jsx)("p",{children:"Functions with side effects are opposite of pure functions. For a given input, pure functions always return the same output."}),Object(d.jsx)("p",{children:"Sid effects are not easily visible. If there's a bug, it may be hard to track. If testing is involved, extra hoops may have to be jumped through. "}),Object(d.jsx)("p",{children:"In this case, simple is better."}),Object(d.jsx)("p",{children:"Don't forget the infamous acronym KISS. Keep it simple stupid. ;)"})]})},u=n(282),b=n(281),p=function(e){return Object(d.jsx)(d.Fragment,{children:Object(d.jsx)(u.a,{language:"javascript",style:b.a,children:e.codeSnippet})})},g=function(){return Object(d.jsxs)(d.Fragment,{children:[Object(d.jsx)("p",{children:Object(d.jsx)("a",{href:"https://reactjs.org/docs/hooks-state.html",children:"useState()"})}),Object(d.jsx)(p,{codeSnippet:"\n        const App = () => {\n            // the initial state is passed in as an argument\n            // useState() returns the current state and a function that updates it\n            const [count, setCount] = useState(0);\n\n            const handleClick = () => {\n                setCounter(count + 1);\n            };\n\n            return (\n                <div>\n                    <div>{count}</div>\n                    <button onClick={handleClick}>Increment</button>\n                </div>\n            );\n        };\n    "})]})},O=function(){return Object(d.jsxs)("div",{children:[Object(d.jsx)("p",{children:Object(d.jsx)("a",{href:"https://reactjs.org/docs/introducing-jsx.html",children:"JSX: style and className"})}),Object(d.jsx)(p,{codeSnippet:'\n    <div\n      style={{\n        paddingTop: 20,\n        width: 500,\n      }}\n    >\n      <div className="title">Title</div>\n    </div>;\n  '})]})},m=function(){return Object(d.jsxs)(d.Fragment,{children:[Object(d.jsx)("p",{children:Object(d.jsx)("a",{href:"https://reactjs.org/docs/lists-and-keys.html",children:"Lists"})}),Object(d.jsx)(p,{codeSnippet:"\n      // key must be unique, avoid using the index of map\n      <ol>\n        {list.map((item) => (\n          <li key={item.id}>{item.name}</li>\n        ))}\n      </ol>\n    "})]})},f=function(){return Object(d.jsxs)(d.Fragment,{children:[Object(d.jsx)("p",{children:Object(d.jsx)("a",{href:"https://reactjs.org/docs/hooks-effect.html",children:"UseEffect()"})}),Object(d.jsx)(p,{codeSnippet:"\n      // Passing an empty array as the second argument runs the effect only once\n      useEffect(() => {\n          fetch('http://example.com/random-movie.json')\n              .then(response => response.json())\n              .then(data => setMovie(data));\n      }, []);\n    "})]})},y=function(){return Object(d.jsxs)(d.Fragment,{children:[Object(d.jsx)("p",{children:Object(d.jsx)("a",{href:"https://reactjs.org/docs/hooks-reference.html#usereducer",children:"useReducer()"})}),Object(d.jsx)(p,{codeSnippet:'\n        const initialState = { count: 0 }\n\n        function reducer(state, action) {\n            switch (action.type) {\n            case "increment":\n                return { count: state.count + 1 };\n            case "decrement":\n                return { count: state.count - 1 };\n            default:\n                throw new Error();\n            }\n        }\n        \n        const App = () => {\n            const [state, dispatch] = useReducer(reducer, initialState);\n        \n            return (\n            <div>\n                <div>{state.count}</div>\n                <button onClick={() => dispatch({type: "increment"})}>increment</button>\n                <button onClick={() => dispatch({type: "decrement"})}>decrement</button>\n            </div>\n            );\n        };\n    '})]})},v=function(){return Object(d.jsxs)(d.Fragment,{children:[Object(d.jsx)("h3",{children:"React"}),Object(d.jsx)("p",{className:"text-secondary",children:"React examples and boilerplate."}),Object(d.jsx)(g,{}),Object(d.jsx)(O,{}),Object(d.jsx)(m,{}),Object(d.jsx)(f,{}),Object(d.jsx)(y,{})]})},w=function(){return Object(d.jsx)("div",{children:"Vanilla JS Examples"})},S=function(){return Object(d.jsxs)(d.Fragment,{children:[Object(d.jsx)("h1",{children:"Git"}),Object(d.jsx)("p",{className:"text-secondary",children:"Git boilerplate and examples"}),Object(d.jsx)("hr",{}),Object(d.jsx)("h3",{children:"How to make a pull request"}),Object(d.jsx)("p",{children:"1. Find a project you want to contribute to. Fork its github repo."}),Object(d.jsx)("p",{children:"2. Clone it to your local system"}),Object(d.jsx)("p",{children:Object(d.jsx)("code",{children:"git clone https://github.com/*YourUserName*/demo"})}),Object(d.jsx)("p",{children:"3. Make a new branch"}),Object(d.jsx)("p",{children:Object(d.jsx)("code",{children:"git checkout -b new_branch"})}),Object(d.jsx)("p",{children:"4. Make your changes. Push it back to your repo."}),Object(d.jsx)("p",{children:Object(d.jsx)("code",{children:"git add ."})}),Object(d.jsx)("p",{children:Object(d.jsx)("code",{children:"git commit -m 'commit message'"})}),Object(d.jsx)("p",{children:Object(d.jsx)("code",{children:"git remote, then git push origin 'new_branch'"})}),Object(d.jsx)("p",{children:Object(d.jsx)("code",{children:"git remote add upstream https://github.com/*TheirUserName*/demo"})}),Object(d.jsx)("p",{children:'6. Click the "Compare & pull request" button in your github repo. Click "Create pull request" to open a new pull request.'})]})},k=function(){return Object(d.jsxs)(d.Fragment,{children:[Object(d.jsx)("h1",{children:"Javascript Regular expressions"}),Object(d.jsx)("p",{className:"text-secondary",children:"Javascript regular expressions examples."}),Object(d.jsx)("hr",{}),Object(d.jsxs)("p",{children:["Using the ",Object(d.jsx)("code",{children:"test"})," method"]}),Object(d.jsx)(p,{codeSnippet:'\n        let string = "Neil Gebhard";\n        let regex = /Neil/;\n        let result = regex.test(string);\n        // result => true\n    '}),Object(d.jsxs)("p",{children:["Using the ",Object(d.jsx)("code",{children:"test"})," method with different possibilities"]}),Object(d.jsx)(p,{codeSnippet:'\n        let string = "Neil has a pet cat.";\n        let regex = /dog|cat|bird|fish/;\n        let result = regex.test(string);\n        // result => true\n    '}),Object(d.jsxs)("p",{children:["Using the ",Object(d.jsx)("code",{children:"test"})," and ignoring case"]}),Object(d.jsx)(p,{codeSnippet:'\n        let myString = "Neil Gebhard";\n        let regex = /neil gebhard/i;\n        let result = regex.test(myString);\n        // result => true\n    '}),Object(d.jsxs)("p",{children:["Extract patterns using ",Object(d.jsx)("code",{children:"match"})]}),Object(d.jsx)(p,{codeSnippet:"\n        let str = \"Extract the word 'coding' from this string.\";\n        let regex = /coding/;\n        let result = str.match(regex);\n        // result => ['coding']\n    "}),Object(d.jsxs)("p",{children:["Extract more than one (1) pattern using ",Object(d.jsx)("code",{children:"match"})]}),Object(d.jsx)(p,{codeSnippet:'\n        let str = "Twinkle, twinkle, little star";\n        let regex = /twinkle/ig;\n        let result = str.match(regex);\n        // result => ["Twinkle", "twinkle"]\n    '}),Object(d.jsxs)("p",{children:['Match anything using the wildcard character "',Object(d.jsx)("code",{children:"."}),'"']}),Object(d.jsx)(p,{codeSnippet:'\n        let str = "Let\'s have fun with wildcard characters!";\n        let regex = /.un/;\n        let result = regex.test(str);\n        // result => true\n    '}),Object(d.jsx)("p",{children:"Match single characters with multiple possibilities"}),Object(d.jsx)(p,{codeSnippet:'\n        let str = "Match all the vowels in this sentence.";\n        let regex = /[aeiou]/ig;\n        let result = str.match(regex);\n        // result => ["a", "a", "e", "o", "e", "i", "i", "e", "e", "e"]\n    '}),Object(d.jsx)("p",{children:"Using character sets to define a range of characters"}),Object(d.jsx)(p,{codeSnippet:'\n        let str = "The quick brown fox jumps over the lazy dog.";\n        let regex = /[a-z]/ig;\n        let result = str.match(regex);\n        // result => ["T", "h", "e", "q", "u", "i", "c", "k", "b", "r", "o", "w", "n", "f", "o", "x", "j", "u", "m", "p", "s", "o", "v", "e", "r", "t", "h", "e", "l", "a", "z", "y", "d", "o", "g"]\n    '}),Object(d.jsx)("p",{children:"Match numbers and characters in the same character set"}),Object(d.jsx)(p,{codeSnippet:'\n        let str = "Blueberry 3.141592653s are delicious.";\n        let regex = /[h-s2-6]/ig;\n        let result = str.match(regex);\n        // result => ["l", "r", "r", "3", "4", "5", "2", "6", "5", "3", "s", "r", "l", "i", "i", "o", "s"]\n    '}),Object(d.jsx)("p",{children:"Using negated character sets to avoid matching characters"}),Object(d.jsx)(p,{codeSnippet:'\n        let str = "3 blind mice.";\n        let regex = /[^aeiou0-9]/ig;\n        let result = str.match(regex);\n        // result => [" ", "b", "l", "n", "d", " ", "m", "c", "."]\n    '}),Object(d.jsxs)("p",{children:['Match characters that occur one or more times using "',Object(d.jsx)("code",{children:"+"}),'"']}),Object(d.jsx)(p,{codeSnippet:'\n        let str = "Mississippi";\n        let regex = /s+/g;\n        let result = str.match(regex);\n        // result => ["ss", "ss"]\n    '}),Object(d.jsxs)("p",{children:['Match characters that occur zero or more times using "',Object(d.jsx)("code",{children:"*"}),'"']}),Object(d.jsx)(p,{codeSnippet:'\n        let str = "Aaaaaargh!"\n        let regex = /Aa*/;\n        let result = str.match(regex);\n        // result => ["Aaaaaa"]\n    '}),Object(d.jsxs)("p",{children:['Match characters with lazy matching (instead of greedy) with "',Object(d.jsx)("code",{children:"*?"}),'"']}),Object(d.jsx)(p,{codeSnippet:'\n        let str = "<h1>Lazy match finds the shortest one</h1>";\n        let regex = /<.*?>/;\n        let result = str.match(regex);\n        // result => ["<h1>"]\n    '}),Object(d.jsxs)("p",{children:['Match beginning string patterns with "',Object(d.jsx)("code",{children:"^"}),'"']}),Object(d.jsx)(p,{codeSnippet:'\n        let str = "Neil loves soccer!";\n        let regex = /^Neil/;\n        let result = regex.test(str);\n        // result => true  \n    '}),Object(d.jsxs)("p",{children:['Match ending string patterns with "',Object(d.jsx)("code",{children:"$"}),'"']}),Object(d.jsx)(p,{codeSnippet:'\n        let str = "Neil loves hiking";\n        let regex = /hiking$/;\n        let result = regex.test(str);\n        // result => true\n    '}),Object(d.jsxs)("p",{children:['Match all letters and numbers with "',Object(d.jsx)("code",{children:"\\w"}),'"']}),Object(d.jsx)(p,{codeSnippet:'\n        let str = "Find the length of this string!";\n        let regex = /\\w/g;\n        let result = str.match(regex).length;\n        // result => 25\n    '}),Object(d.jsxs)("p",{children:["Match characters that aren't letters and numbers with \"",Object(d.jsx)("code",{children:"\\W"}),'"']}),Object(d.jsx)(p,{codeSnippet:'\n        let str = "How many are not letters of numbers???";\n        let regex = /\\W/g;\n        let result = str.match(regex).length;\n        // result => 9 (There are 6 spaces)\n    '})]})},F=function(){return Object(d.jsx)(h.a,{children:Object(d.jsxs)(a.a,{children:[Object(d.jsxs)(j.a,{bg:"light",variant:"light",children:[Object(d.jsx)(j.a.Brand,{href:"",children:"Neil Gebhard"}),Object(d.jsxs)(o.a,{className:"me-auto",children:[Object(d.jsx)(o.a.Link,{href:"",children:Object(d.jsx)(a.b,{to:"/learn-through-examples",children:"Home"})}),Object(d.jsx)(o.a.Link,{href:"",children:Object(d.jsx)(a.b,{to:"/learn-through-examples/react",children:"React"})}),Object(d.jsx)(o.a.Link,{href:"",children:Object(d.jsx)(a.b,{to:"/learn-through-examples/vanillajs",children:"Vanilla Js"})}),Object(d.jsx)(o.a.Link,{href:"",children:Object(d.jsx)(a.b,{to:"/learn-through-examples/git",children:"Git"})}),Object(d.jsx)(o.a.Link,{href:"",children:Object(d.jsx)(a.b,{to:"/learn-through-examples/js-regex",children:"JS Regex"})})]})]}),Object(d.jsxs)(l.c,{children:[Object(d.jsx)(l.a,{exact:!0,path:"/learn-through-examples",children:Object(d.jsx)(x,{})}),Object(d.jsx)(l.a,{exact:!0,path:"/learn-through-examples/react",children:Object(d.jsx)(v,{})}),Object(d.jsx)(l.a,{path:"/learn-through-examples/vanillajs",children:Object(d.jsx)(w,{})}),Object(d.jsx)(l.a,{path:"/learn-through-examples/git",children:Object(d.jsx)(S,{})}),Object(d.jsx)(l.a,{path:"/learn-through-examples/js-regex",children:Object(d.jsx)(k,{})})]})]})})},M=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,283)).then((function(t){var n=t.getCLS,s=t.getFID,c=t.getFCP,r=t.getLCP,i=t.getTTFB;n(e),s(e),c(e),r(e),i(e)}))};i.a.render(Object(d.jsx)(c.a.StrictMode,{children:Object(d.jsx)(F,{})}),document.getElementById("root")),M()},46:function(e,t,n){},48:function(e,t,n){}},[[277,1,2]]]);
//# sourceMappingURL=main.2d1884ef.chunk.js.map